{"version":3,"sources":["api/users.ts","api/todos.ts","Components/User/UserInfo.tsx","Components/Todo/TodoInfo.tsx","Components/Todo/TodoList.tsx","Components/Form/AddNewTodo.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","props","user","className","TodoInfo","todo","TodoList","tasks","map","task","AddNewTodo","state","isTitleEmpty","isSelectUser","resetForm","setState","handleChange","event","target","value","handleSelectChange","getValueFromForm","preventDefault","trim","length","newTodo","find","addTodo","currentState","this","onSubmit","type","placeholder","onChange","React","Component","preparedTodos","todosFromServer","App","addNewTask","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.504a4681.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\r\n\r\ntype Props = {\r\n  user: User;\r\n};\r\n\r\nexport const UserInfo: React.FC<Props> = (props) => {\r\n  const { user } = props;\r\n  const { name, username, email } = user;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list-item\">{name}</div>\r\n      <div className=\"list-item\">{username}</div>\r\n      <div className=\"list-item\">{email}</div>\r\n    </>\r\n  );\r\n};\r\n","import { UserInfo } from '../User/UserInfo';\r\n\r\ntype Props = {\r\n  todo: Todo;\r\n};\r\n\r\nexport const TodoInfo: React.FC<Props> = (props) => {\r\n  const { todo } = props;\r\n  const { user, title } = todo;\r\n\r\n  return (\r\n    <>\r\n      {user && <UserInfo user={user} />}\r\n      <div className=\"list-item\">{title}</div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport { TodoInfo } from './TodoInfo';\nimport './TodoList.scss';\n\ninterface Props {\n  tasks: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { tasks } = props;\n\n  return (\n    <ul className=\"todo list-group\">\n      {tasks.map(task => (\n        <li className=\"list-group-item d-flex justify-content-around\" key={task.id}>\n          <TodoInfo todo={task} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  users: User[];\n  tasks: Todo[];\n  addTodo: (todo: Todo) => void,\n}\n\ninterface State {\n  title: string;\n  userId: number;\n  isTitleEmpty: boolean;\n  isSelectUser: boolean;\n}\n\nexport class AddNewTodo extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    userId: 0,\n    isTitleEmpty: false,\n    isSelectUser: false,\n  };\n\n  resetForm = () => {\n    this.setState({\n      title: '',\n      userId: 0,\n      isTitleEmpty: false,\n      isSelectUser: false,\n    });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      userId: +event.target.value,\n    });\n  };\n\n  getValueFromForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    const { userId, title } = this.state;\n\n    if (title.trim().length === 0) {\n      this.setState(currentState => ({\n        isTitleEmpty: !currentState.isTitleEmpty,\n      }));\n\n      return;\n    }\n\n    if (userId === 0) {\n      this.setState(currentState => ({\n        isSelectUser: !currentState.isSelectUser,\n      }));\n\n      return;\n    }\n\n    const newTodo = {\n      userId,\n      id: this.props.tasks.length + 1,\n      title,\n      user: this.props.users.find(user => user.id === this.state.userId),\n    };\n\n    this.props.addTodo(newTodo);\n    this.resetForm();\n  };\n\n  render() {\n    const { users } = this.props;\n    const {\n      title,\n      userId,\n      isTitleEmpty,\n      isSelectUser,\n    } = this.state;\n\n    return (\n      <div className=\"container d-flex flex-column\">\n        <div className=\"row mb-3\">\n          <form className=\"form-todo\" onSubmit={this.getValueFromForm}>\n            <div className=\"input-group d-flex justify-content-evenly\">\n              <div className=\"col-sm-5 mr-3\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Write your task here\"\n                  name=\"title\"\n                  id=\"titleTodo\"\n                  value={title}\n                  onChange={this.handleChange}\n                />\n                {isTitleEmpty\n                  && <span className=\"error\">Please enter the title!</span>}\n              </div>\n              <div className=\"col-sm-5 mr-3\">\n                <select\n                  className=\"form-select\"\n                  name=\"userId\"\n                  value={userId}\n                  onChange={this.handleSelectChange}\n                >\n                  <option value=\"\">Choose a user</option>\n                  {users.map(user => (\n                    <option key={user.id} value={user.id}>{user.name}</option>\n                  ))}\n                </select>\n                {isSelectUser\n                  && <span className=\"error\">Please select user!</span>}\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-center mt-3\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-success btn-lg\"\n              >\n                Add Task\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './Components/Todo/TodoList';\nimport { AddNewTodo } from './Components/Form/AddNewTodo';\n\nconst preparedTodos = todosFromServer.map(todo => {\n  const user = users.find(({ id }) => id === todo.userId)\n    || null;\n\n  return { ...todo, user };\n});\n\ntype State = {\n  todos: Todo[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: preparedTodos as Todo[],\n  };\n\n  addNewTask = (todo: Todo) => {\n    this.setState(currentState => ({\n      todos: [...currentState.todos, todo],\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Add todo form</h1>\n        </div>\n        <AddNewTodo\n          addTodo={this.addNewTask}\n          users={users}\n          tasks={todos}\n        />\n        <TodoList tasks={todos} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}